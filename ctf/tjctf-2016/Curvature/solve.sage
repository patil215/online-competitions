from sage.all import *
import curvature



def compute(g):
 return curvature.generate( 

P = 11093300438765357787693823122068501933326829181518693650897090781749379503427651954028543076247583697669597230934286751428880673539155279232304301123931419.0
A = 490963434153515882934487973185142842357175523008183292296815140698999054658777820556076794490414610737654365807063916602037816955706321036900113929329671
#B = 7668542654793784988436499086739239442915170287346121645884096222948338279165302213440060079141960679678526016348025029558335977042712382611197995002316466
X0 = 10861775096169286150205319688117417914848123109121745067635541337017032620284063473400066861512935256258915840659666881491995138752871261707640938043429338
Y0 = 5337811241444738635104333336651682435333375485474589886962155976578217543214247962118129491172191299739399710969955348487423009201403727326401683735321744

G = "(10861775096169286150205319688117417914848123109121745067635541337017032620284063473400066861512935256258915840659666881491995138752871261707640938043429338, 5337811241444738635104333336651682435333375485474589886962155976578217543214247962118129491172191299739399710969955348487423009201403727326401683735321744)"
G1 = "(10150325274093651859575658519947563789222194633356867789068177057343771571940302488270622886585658965620106459791565259790154958179860547267338437952379763, 6795014289013853849339410895464797184780777251924203530417684718894057583288011725702609805686960505075072642102076744937056900144377846048950215257629102)"

B = raw_input("Enter a b value: ")
prime = raw_input("Enter a prime: ")

E = EllipticCurve(GF(P), [A, int(B + int(P))])

G = E.gen(0) * int(E.order() / int(prime))

G1 = compute(str(G).replace('(', '').replace(' : 1)', '').replace(' : ', ' '))
G1 = E(int(G1[1:G1.index(',')]), int(G1[G1.index(' ')+1:len(G1)-1]))



"""G0X = int(str(E.gen(0)).replace('(', '').replace(' : 1)', '').replace(' : ', ' ').split()[0])
G0Y = int(str(E.gen(0)).replace('(', '').replace(' : 1)', '').replace(' : ', ' ').split()[1])
Ord = E.order()
magicprime = G0X * Ord / A

G = E(int(G[1:G.index(',')]), int(G[G.index(' ')+1:len(G)-1]))
G1 = E(int(G1[1:G1.index(',')]), int(G1[G1.index(' ')+1:len(G1)-1]))

print str(G.discrete_log(G1))
#print "K mod " + magicprime + " = " + str(G.discrete_log(G1))
"""
